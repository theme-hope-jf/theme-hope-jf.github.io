import{a3 as e,Z as a,_ as s,a5 as n}from"./framework-61fc4e0a.js";const c={},d=n(`<h2 id="проверка-ссылки" tabindex="-1"><a class="header-anchor" href="#проверка-ссылки" aria-hidden="true">#</a> Проверка ссылки</h2><p>По умолчанию тема проверит ваши уценочные ссылки в режиме разработки.</p><p>Вы можете настроить эту функцию с помощью <code>plugins.mdEnhance.linkCheck</code> в настройках темы, и вы можете выбрать <code>&#39;always&#39;</code>, <code>&#39;never&#39;</code>, <code>&#39;dev&#39;</code> и <code>&#39;build&#39;</code>.</p><h2 id="gfm" tabindex="-1"><a class="header-anchor" href="#gfm" aria-hidden="true">#</a> GFM</h2><p>Если ваши документы размещены как на сайте документации, так и непосредственно на GitHub, мы предоставляем <code>plugins.mdEnhance.gfm</code> в параметрах темы, чтобы согласовать ваше поведение Markdown с GitHub.</p><div class="hint-container note"><p class="hint-container-title">Заметка</p><p>Пользовательский контейнер включен по умолчанию в <code>@vuepress/theme-default</code> и <code>vuepress-theme-hope</code>, но недоступен в предварительной версии GitHub Markdown.</p></div><h2 id="v-pre" tabindex="-1"><a class="header-anchor" href="#v-pre" aria-hidden="true">#</a> v-pre</h2><p>Поскольку VuePress2 удалил контейнер V1 v-pre из ядра, плагин предоставляет возможность его поддержки. То есть вы можете использовать любой синтаксис Mustache в контейнере ниже.</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">::: v-pre</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">{{ abc }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">:::</span></span>
<span class="line"></span></code></pre></div>`,9),o=[d];function r(t,p){return a(),s("div",null,o)}const l=e(c,[["render",r],["__file","others.html.vue"]]);export{l as default};
