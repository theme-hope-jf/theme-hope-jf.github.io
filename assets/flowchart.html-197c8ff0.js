import{a3 as d,Z as B,_ as u,a4 as h,$ as e,a0 as o,a1 as s,a2 as a,a5 as l,D as t}from"./framework-61fc4e0a.js";const g={},y=s("p",null,"Пусть файл Markdown поддерживает блок-схему на вашем сайте VuePress.",-1),b=s("h2",{id:"конфиг",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#конфиг","aria-hidden":"true"},"#"),a(" Конфиг")],-1),F=s("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[s("pre",{class:"shiki one-dark-pro",style:{"background-color":"#282c34"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#7F848E","font-style":"italic"}},"// .vuepress/config.ts")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C678DD"}},"import"),s("span",{style:{color:"#ABB2BF"}}," { "),s("span",{style:{color:"#E06C75"}},"defineUserConfig"),s("span",{style:{color:"#ABB2BF"}}," } "),s("span",{style:{color:"#C678DD"}},"from"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#98C379"}},'"vuepress"'),s("span",{style:{color:"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C678DD"}},"import"),s("span",{style:{color:"#ABB2BF"}}," { "),s("span",{style:{color:"#E06C75"}},"hopeTheme"),s("span",{style:{color:"#ABB2BF"}}," } "),s("span",{style:{color:"#C678DD"}},"from"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#98C379"}},'"vuepress-theme-hope"'),s("span",{style:{color:"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C678DD"}},"export"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#C678DD"}},"default"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#61AFEF"}},"defineUserConfig"),s("span",{style:{color:"#ABB2BF"}},"({")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"  "),s("span",{style:{color:"#E06C75"}},"theme"),s("span",{style:{color:"#ABB2BF"}},": "),s("span",{style:{color:"#61AFEF"}},"hopeTheme"),s("span",{style:{color:"#ABB2BF"}},"({")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"    "),s("span",{style:{color:"#E06C75"}},"plugins"),s("span",{style:{color:"#ABB2BF"}},": {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"      "),s("span",{style:{color:"#E06C75"}},"mdEnhance"),s("span",{style:{color:"#ABB2BF"}},": {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"        "),s("span",{style:{color:"#E06C75"}},"flowchart"),s("span",{style:{color:"#ABB2BF"}},": "),s("span",{style:{color:"#D19A66"}},"true"),s("span",{style:{color:"#ABB2BF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"      },")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"    },")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"  }),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"});")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("br"),s("br"),s("br")]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),A=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[s("pre",{class:"shiki one-dark-pro",style:{"background-color":"#282c34"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#7F848E","font-style":"italic"}},"// .vuepress/config.js")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C678DD"}},"import"),s("span",{style:{color:"#ABB2BF"}}," { "),s("span",{style:{color:"#E06C75"}},"hopeTheme"),s("span",{style:{color:"#ABB2BF"}}," } "),s("span",{style:{color:"#C678DD"}},"from"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#98C379"}},'"vuepress-theme-hope"'),s("span",{style:{color:"#ABB2BF"}},";")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#C678DD"}},"export"),s("span",{style:{color:"#ABB2BF"}}," "),s("span",{style:{color:"#C678DD"}},"default"),s("span",{style:{color:"#ABB2BF"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"  "),s("span",{style:{color:"#E06C75"}},"theme"),s("span",{style:{color:"#ABB2BF"}},": "),s("span",{style:{color:"#61AFEF"}},"hopeTheme"),s("span",{style:{color:"#ABB2BF"}},"({")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"    "),s("span",{style:{color:"#E06C75"}},"plugins"),s("span",{style:{color:"#ABB2BF"}},": {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"      "),s("span",{style:{color:"#E06C75"}},"mdEnhance"),s("span",{style:{color:"#ABB2BF"}},": {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"        "),s("span",{style:{color:"#E06C75"}},"flowchart"),s("span",{style:{color:"#ABB2BF"}},": "),s("span",{style:{color:"#D19A66"}},"true"),s("span",{style:{color:"#ABB2BF"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"      },")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"    },")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"  }),")]),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#ABB2BF"}},"};")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("div",{class:"highlight-line"}," "),s("br"),s("br"),s("br")]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),m=l(`<h2 id="синтаксис" tabindex="-1"><a class="header-anchor" href="#синтаксис" aria-hidden="true">#</a> Синтаксис</h2><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- ↓ :preset is optional --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`flow:preset</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;!-- Your flowchart code here. --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span></code></pre></div><p>Доступные пресеты на данный момент:</p><ul><li><code>vue</code> (по умолчанию)</li><li><code>ant</code></li><li><code>pie</code></li></ul><h2 id="демо" tabindex="-1"><a class="header-anchor" href="#демо" aria-hidden="true">#</a> Демо</h2>`,5),v=l(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">\`\`\`flow</span></span>
<span class="line"><span style="color:#ABB2BF;">st=&gt;start: Start|past:&gt;http://www.google.com[blank]</span></span>
<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End|future:&gt;http://www.google.com</span></span>
<span class="line"><span style="color:#ABB2BF;">op1=&gt;operation: My Operation|past</span></span>
<span class="line"><span style="color:#ABB2BF;">op2=&gt;operation: Stuff|current</span></span>
<span class="line"><span style="color:#ABB2BF;">sub1=&gt;subroutine: My Subroutine|invalid</span></span>
<span class="line"><span style="color:#ABB2BF;">cond=&gt;condition: Yes</span></span>
<span class="line"><span style="color:#ABB2BF;">or No?|approved:&gt;http://www.google.com</span></span>
<span class="line"><span style="color:#ABB2BF;">c2=&gt;condition: Good idea|rejected</span></span>
<span class="line"><span style="color:#ABB2BF;">io=&gt;inputoutput: catch something...|future</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">st-&gt;op1(right)-&gt;cond</span></span>
<span class="line"><span style="color:#ABB2BF;">cond(yes, right)-&gt;c2</span></span>
<span class="line"><span style="color:#ABB2BF;">cond(no)-&gt;sub1(left)-&gt;op1</span></span>
<span class="line"><span style="color:#ABB2BF;">c2(yes)-&gt;io-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">c2(no)-&gt;op2-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="введение-в-блок-схему" tabindex="-1"><a class="header-anchor" href="#введение-в-блок-схему" aria-hidden="true">#</a> Введение в блок-схему</h2><h3 id="типы-узлов" tabindex="-1"><a class="header-anchor" href="#типы-узлов" aria-hidden="true">#</a> Типы узлов</h3><p>Определяет форму, которую примет узел.</p><h3 id="начало-и-конец" tabindex="-1"><a class="header-anchor" href="#начало-и-конец" aria-hidden="true">#</a> Начало и Конец</h3><p>Используется как первый узел, с которого начинаются потоки. Текст по умолчанию <code>Start</code>.</p><ul><li><code>[Variable]-&gt;start: [Text]</code></li></ul><p>Используется как последний узел, где заканчивается поток. Текст по умолчанию <code>End</code>.</p><ul><li><code>[Variable]-&gt;end: [Text]</code></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">\`\`\`flow</span></span>
<span class="line"><span style="color:#ABB2BF;">st=&gt;start: Start</span></span>
<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">st-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span></code></pre></div>`,10),f=l('<h3 id="операция" tabindex="-1"><a class="header-anchor" href="#операция" aria-hidden="true">#</a> Операция</h3><p>Указывает, что в потоке должна быть выполнена операция.</p><ul><li><code>[Variable]-&gt;operation: [Text]</code></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">```flow</span></span>\n<span class="line"><span style="color:#ABB2BF;">process=&gt;operation: Operation</span></span>\n<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">process-&gt;e</span></span>\n<span class="line"><span style="color:#ABB2BF;">```</span></span>\n<span class="line"></span></code></pre></div>',4),k=l('<h3 id="ввод-вывод" tabindex="-1"><a class="header-anchor" href="#ввод-вывод" aria-hidden="true">#</a> Ввод / Вывод</h3><p>Указывает, что ввод-вывод происходит в потоке.</p><ul><li><code>[Variable]-&gt;inputoutput: [Text]</code></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">```flow</span></span>\n<span class="line"><span style="color:#ABB2BF;">process=&gt;inputoutput: Inputoutput</span></span>\n<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">process-&gt;e</span></span>\n<span class="line"><span style="color:#ABB2BF;">```</span></span>\n<span class="line"></span></code></pre></div>',4),x=l('<h3 id="подпрограмма" tabindex="-1"><a class="header-anchor" href="#подпрограмма" aria-hidden="true">#</a> Подпрограмма</h3><p>Указывает, что в потоке происходит подпрограмма и что должна быть другая блок-схема, документирующая эту подпрограмму.</p><ul><li><code>[Variable]-&gt;subroutine: [Text]</code></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">```flow</span></span>\n<span class="line"><span style="color:#ABB2BF;">process=&gt;subroutine: Subroutine</span></span>\n<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;">process-&gt;e</span></span>\n<span class="line"><span style="color:#ABB2BF;">```</span></span>\n<span class="line"></span></code></pre></div>',4),w=l(`<h3 id="условие" tabindex="-1"><a class="header-anchor" href="#условие" aria-hidden="true">#</a> Условие</h3><p>Позволяет условному или логическому оператору направить поток по одному из двух или более путей.</p><ul><li><p><code>[Variable]-&gt;condition: [Text]</code></p></li><li><p><code>[Variable]([yesText])-&gt;[Position]</code></p></li><li><p><code>[Variable]([noText])-&gt;[Position]</code></p></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">\`\`\`flow</span></span>
<span class="line"><span style="color:#ABB2BF;">cond=&gt;condition: Process?</span></span>
<span class="line"><span style="color:#ABB2BF;">process=&gt;operation: Process</span></span>
<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">cond(yes)-&gt;process-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">cond(no)-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span></code></pre></div>`,4),C=l(`<h3 id="параллельно" tabindex="-1"><a class="header-anchor" href="#параллельно" aria-hidden="true">#</a> Параллельно</h3><p>Позволяет одновременно выполнять несколько потоков.</p><ul><li><code>[Variable]-&gt;parallel: [Text]</code></li><li><code>[Variable](path1, direction)-&gt;[Position]</code></li><li><code>[Variable](path1, direction)-&gt;[Position]</code></li></ul><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">\`\`\`flow</span></span>
<span class="line"><span style="color:#ABB2BF;">para=&gt;parallel: parallel tasks</span></span>
<span class="line"><span style="color:#ABB2BF;">process=&gt;operation: Process</span></span>
<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">para(path1, bottom)-&gt;process-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">para(path2)-&gt;e</span></span>
<span class="line"><span style="color:#ABB2BF;">\`\`\`</span></span>
<span class="line"></span></code></pre></div>`,4),q=l(`<h2 id="соединения" tabindex="-1"><a class="header-anchor" href="#соединения" aria-hidden="true">#</a> Соединения</h2><p>Соединения определяются в отдельном разделе под определениями узлов.</p><p>Оператор <code>-&gt;</code> указывает соединение от одного узла к другому, например <code>nodeVar1-&gt;nodeVar2-&gt;nodeVar3</code>.</p><p>Не все узлы должны быть указаны в одной строке и могут быть разделены таким образом</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">nodeVar1-&gt;nodeVar2</span></span>
<span class="line"><span style="color:#ABB2BF;">nodeVar2-&gt;nodeVar3</span></span>
<span class="line"></span></code></pre></div><p>Синтаксис подключения следующий:</p><p><code>&lt;node variable name&gt;[(&lt;specification1&gt;[, &lt;specification2])]-&gt;&lt;node variable name&gt;[[(&lt;specification1&gt;[, &lt;specification2])]-&gt;&lt;node variable name&gt;]</code></p><p>Элементы в <code>[]</code> являются необязательными.</p><h3 id="направления" tabindex="-1"><a class="header-anchor" href="#направления" aria-hidden="true">#</a> Направления</h3><p>Доступны следующие направления, которые определяют направление, из которого соединение выйдет из узла. Если имеется более одного спецификатора, он всегда будет последним. Все узлы имеют направление по умолчанию, поэтому это необязательная спецификация. Будет использоваться. <code>&lt;direction&gt;</code>, и вместо него следует использовать один из приведенных ниже списков.</p><ul><li><code>left</code></li><li><code>right</code></li><li><code>top</code></li><li><code>bottom</code></li></ul><h3 id="специфичные-для-узла-спецификаторы-по-типу" tabindex="-1"><a class="header-anchor" href="#специфичные-для-узла-спецификаторы-по-типу" aria-hidden="true">#</a> Специфичные для узла спецификаторы по типу</h3><p>Каждая переменная узла имеет необязательные спецификаторы, такие как направление, а некоторые имеют специальные спецификаторы в зависимости от типа узла, которые определены ниже. Спецификаторы добавляются после имени переменной в <code>()</code> и разделяются символом <code>,</code>, например, <code>nodeVar(spec1, spec2)</code>.</p><ul><li><p><strong>start</strong><strong>operation</strong><strong>inputoutput</strong><strong>subroutine</strong></p><p>Дополнительное направление</p><p><code>startVar(&lt;direction&gt;)-&gt;nextNode</code></p><p><code>operationVar(&lt;direction&gt;)-&gt;nextNode</code></p><p><code>inputoutputVar(&lt;direction&gt;)-&gt;nextNode</code></p><p><code>subroutineVar(&lt;direction&gt;)-&gt;nextNode</code></p></li><li><p><strong>condition</strong></p><p>Требуемая логическая спецификация <code>yes</code> или <code>no</code></p><p>Дополнительное направление</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">conditionalVar(yes, &lt;direction&gt;)-&gt;nextNode1</span></span>
<span class="line"><span style="color:#ABB2BF;">conditionalVar(no, &lt;direction&gt;)-&gt;nextNode2</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>parallel</strong></p><p>Требуемая спецификация пути <code>path1</code>, <code>path2</code>, или <code>path3</code></p><p>Дополнительное направление</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">parallelVar(path1, &lt;direction&gt;)-&gt;nextNode1</span></span>
<span class="line"><span style="color:#ABB2BF;">parallelVar(path2, &lt;direction&gt;)-&gt;nextNode2</span></span>
<span class="line"><span style="color:#ABB2BF;">parallelVar(path3, &lt;direction&gt;)-&gt;nextNode3</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="ссылки" tabindex="-1"><a class="header-anchor" href="#ссылки" aria-hidden="true">#</a> Ссылки</h3><p>Внешняя ссылка может быть добавлена к узлу с помощью оператора <code>:&gt;</code>.</p><p>Узел <code>st</code> связан с <code>http://www.google.com</code> и откроет новую вкладку, потому что <code>[blank]</code> находится в конце URL-адреса.</p><p>Узел <code>e</code> связан с <code>http://www.yahoo.com</code> и заставит страницу перейти на эту страницу вместо открытия новой вкладки.</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">st=&gt;start: Start:&gt;http://www.google.com[</span><span style="color:#61AFEF;">blank</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">e=&gt;end: End:&gt;http://www.yahoo.com</span></span>
<span class="line"></span></code></pre></div><h2 id="совет" tabindex="-1"><a class="header-anchor" href="#совет" aria-hidden="true">#</a> Совет</h2><p>Символы, которые, возможно, не следует использовать в тексте: <code>=&gt;</code> и <code>-&gt;</code> и <code>:&gt;</code> и <code>|</code> и <code>@&gt;</code> и <code>:$</code></p><p>Чтобы выделить конкретный путь в блок-схеме, вы можете определить его следующим образом:</p><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">st@&gt;op1({&quot;stroke&quot;:&quot;Red&quot;})@&gt;cond({&quot;stroke&quot;:&quot;Red&quot;,&quot;stroke-width&quot;:6,&quot;arrow-end&quot;:&quot;classic-wide-long&quot;})@&gt;c2({&quot;stroke&quot;:&quot;Red&quot;})@&gt;op2({&quot;stroke&quot;:&quot;Red&quot;})@&gt;e({&quot;stroke&quot;:&quot;Red&quot;})</span></span>
<span class="line"></span></code></pre></div>`,23);function V(E,J){const c=t("CodeTabs"),n=t("FlowChart");return B(),u("div",null,[y,h(" more "),b,e(c,{id:"7",data:[{title:"TS"},{title:"JS"}],"tab-id":"language"},{tab0:o(({title:p,value:i,isActive:r})=>[F]),tab1:o(({title:p,value:i,isActive:r})=>[A]),_:1}),m,e(n,{id:"flowchart-42",code:"eJx1ULFOwzAQ3f0VHotEUrWjpZgJMQFDJoQYXPuSGFKfZZ8bVfLHY6dQwdDlrHd+7927i9TJSCqQ4H19sleRhJyIvNhul2VpR8Rxhlbj8f0wK/f1waCT4Izgj87kIVEKcEPA0O86iR6CIotO8Oczf/1F66TC2P9j9JSGIesUAjhiMR2KQakBE1kHq0N/hdm6k5qtYRqd6WSt9mLzBpFh4C/4kJX3AU9gbmXUJcAf5ROi4daAygE+QRMYZrGT1vlEZWqpgmtFeuIRj0CTdWPbtj93YCxSU9bZbYIdJ7prVuc13uYM8Z5f2/tL02EBdcvNDEP9KNqSqJILsNhIqHCllVNV+A2yapmT",preset:"vue"}),e(n,{id:"flowchart-43",code:"eJx1ULFOwzAQ3f0VHotEUrWjpZgJMQFDJoQYXPuSGFKfZZ8bVfLHY6dQwdDlrHd+7927i9TJSCqQ4H19sleRhJyIvNhul2VpR8Rxhlbj8f0wK/f1waCT4Izgj87kIVEKcEPA0O86iR6CIotO8Oczf/1F66TC2P9j9JSGIesUAjhiMR2KQakBE1kHq0N/hdm6k5qtYRqd6WSt9mLzBpFh4C/4kJX3AU9gbmXUJcAf5ROi4daAygE+QRMYZrGT1vlEZWqpgmtFeuIRj0CTdWPbtj93YCxSU9bZbYIdJ7prVuc13uYM8Z5f2/tL02EBdcvNDEP9KNqSqJILsNhIqHCllVNV+A2yapmT",preset:"ant"}),e(n,{id:"flowchart-44",code:"eJx1ULFOwzAQ3f0VHotEUrWjpZgJMQFDJoQYXPuSGFKfZZ8bVfLHY6dQwdDlrHd+7927i9TJSCqQ4H19sleRhJyIvNhul2VpR8Rxhlbj8f0wK/f1waCT4Izgj87kIVEKcEPA0O86iR6CIotO8Oczf/1F66TC2P9j9JSGIesUAjhiMR2KQakBE1kHq0N/hdm6k5qtYRqd6WSt9mLzBpFh4C/4kJX3AU9gbmXUJcAf5ROi4daAygE+QRMYZrGT1vlEZWqpgmtFeuIRj0CTdWPbtj93YCxSU9bZbYIdJ7prVuc13uYM8Z5f2/tL02EBdcvNDEP9KNqSqJILsNhIqHCllVNV+A2yapmT",preset:"pie"}),v,e(n,{id:"flowchart-79",code:"eJwrLrG1Ky5JLCqxUggGUVyptnapeSlWCq55KVxcxSW6dqlcAOP4C2A=",preset:"vue"}),f,e(n,{id:"flowchart-94",code:"eJwrKMpPTi0utrXLL0gtSizJzM+zUvCHMblSbe1S81KsFFzzUri4oEp17VK5ACXfEtY=",preset:"vue"}),k,e(n,{id:"flowchart-109",code:"eJwrKMpPTi0utrXLzCsoLckvLQGSVgqeCA5Xqq1dal6KlYJrXgoXF1S5rl0qFwCSlRT2",preset:"vue"}),x,e(n,{id:"flowchart-124",code:"eJwrKMpPTi0utrUrLk0qyi8tycxLtVIIhrO5Um3tUvNSrBRc81K4uKCKde1SuQBZbhPU",preset:"vue"}),w,e(n,{id:"flowchart-149",code:"eJxLzs9LsbUDkZklmfl5VgoBRfnJqcXF9lwFEIatXX5BalEiiiRXqq1dal6KlYJrXgoXF0izRmVqsaauHVSPrl0qRDQvHyiYygUAPWgiyQ==",preset:"vue"}),C,e(n,{id:"flowchart-174",code:"eJxFizEKgDAMRfecIqOCDjoWms3dK0QNKNamtLk/Kioun897vMSZPd0bggSH30PjshdIWWcpxZMmyWybRofjw0A8SVwcDnEBuLsqsa1dg5Oa6VG39NYtye/7iwucDNwpNA==",preset:"vue"}),q])}const R=d(g,[["render",V],["__file","flowchart.html.vue"]]);export{R as default};
