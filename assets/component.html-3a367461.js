import{a3 as e,Z as o,_ as l,a4 as p,a1 as s,a2 as n,$ as t,a5 as c,D as r}from"./framework-61fc4e0a.js";const i={},B=s("p",null,"В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress.",-1),d=s("h2",{id:"импорт-компонентов-vue-глобально",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#импорт-компонентов-vue-глобально","aria-hidden":"true"},"#"),n(" Импорт компонентов Vue глобально")],-1),y=s("h3",{id:"регистрация-через-vuepress-plugin-register-components",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#регистрация-через-vuepress-plugin-register-components","aria-hidden":"true"},"#"),n(" Регистрация через "),s("code",null,"@vuepress/plugin-register-components")],-1),u=s("p",null,[n("Вы можете автоматически регистрировать компоненты с помощью плагина "),s("code",null,"@vuepress/plugin-register-components"),n(".")],-1),F={href:"https://v2.vuepress.vuejs.org/reference/plugin/register-components.html",target:"_blank",rel:"noopener noreferrer"},m=c(`<h3 id="регистрация-через-clientconfigfile" tabindex="-1"><a class="header-anchor" href="#регистрация-через-clientconfigfile" aria-hidden="true">#</a> Регистрация через ClientConfigFile</h3><p>Вы можете создать <code>.vuepress/client.ts</code> и зарегистрировать компоненты вручную.</p><div class="language-typescript" data-ext="ts"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .vuepress/client.ts</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineClientConfig</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@vuepress/client&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">MyComponent</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;./MyComponent.vue&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineClientConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">enhance</span><span style="color:#ABB2BF;">: ({ </span><span style="color:#E06C75;font-style:italic;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">router</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">siteData</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;MyComponent&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">MyComponent</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="использование-синтаксиса-и-компонентов-vue-в-markdown" tabindex="-1"><a class="header-anchor" href="#использование-синтаксиса-и-компонентов-vue-в-markdown" aria-hidden="true">#</a> Использование синтаксиса и компонентов Vue в Markdown</h2><p>Вы можете использовать синтаксис Vue непосредственно в Markdown. Для конкретного использования смотрите [VuePress → Markdown](../vuepress/markdown.md#Use -vue in -markdown-)</p><p>Если вам нужно импортировать компоненты Vue в Markdown, обратите внимание, что вы не можете использовать относительные пути для импорта или писать несколько блоков <code>&lt;script&gt;</code>.</p><div class="hint-container info"><p class="hint-container-title">Markdown с Vue SFC</p><p>Каждый файл Markdown сначала компилируется в HTML, а затем преобразуется в компонент одного файла Vue (SFC). Другими словами, вы можете писать файлы Markdown, такие как Vue SFC:</p><p>Теги <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code> напрямую обрабатываются как теги в Vue SFC. Другими словами, они продвигаются из тега <code>&lt;template&gt;</code> на верхний уровень SFC. Весь контент, кроме тегов <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code>, будет скомпилирован в HTML, а затем обработан как теги <code>&lt;template&gt;</code> в Vue SFC.</p><p>Поскольку однофайловые компоненты Vue могут содержать только один тег <code>&lt;script&gt;</code>, вам следует избегать использования более одного тега <code>&lt;script&gt;</code> в VuePress Markdown.</p><p>Кроме того, поскольку Markdown будет преобразован в однофайловые компоненты Vue в каталоге кеша, любой импорт относительного пути будет недопустимым в Vue SFC.</p></div><p>Чтобы корректно импортировать собственные компоненты, вам необходимо создать для них псевдонимы, сделать это можно с помощью опции <code>alias</code>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .vuepress/config.ts</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">getDirname</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@vuepress/utils&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">__dirname</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getDirname</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">alias</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;@MyComponent&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;components/MyComponent.vue&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;MyComponent /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;script setup lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">import MyComponent from &quot;@MyComponent&quot;;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/script&gt;</span></span>
<span class="line"></span></code></pre></div><p>Это немного сложнее, но если компонент используется только на одной странице, такой импорт имеет преимущества:</p><ul><li>Глобальный импорт означает, что код компонента нужно загрузить при инициализации VuePress, то есть при посещении первой страницы</li><li>Импорт в Markdown приводит к включению кода компонента в код страницы, чтобы он загружался только при посещении страницы</li></ul>`,12);function C(A,v){const a=r("ExternalLinkIcon");return o(),l("div",null,[B,p(" more "),d,y,u,s("p",null,[n("Подробнее об использовании плагина смотрите в "),s("a",F,[n("Официальной документации"),t(a)]),n(".")]),m])}const h=e(i,[["render",C],["__file","component.html.vue"]]);export{h as default};
