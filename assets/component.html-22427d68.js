import{a3 as t,Z as c,_ as r,a4 as i,a1 as s,a2 as n,$ as a,a0 as B,a5 as o,D as e}from"./framework-61fc4e0a.js";const d={},y=s("p",null,"本教程将指引你如何在 VuePress 项目中使用 Vue 组件与 Vue 语法。",-1),u=s("h2",{id:"全局导入-vue-组件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#全局导入-vue-组件","aria-hidden":"true"},"#"),n(" 全局导入 Vue 组件")],-1),F=s("h3",{id:"通过-vuepress-plugin-register-components-注册组件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#通过-vuepress-plugin-register-components-注册组件","aria-hidden":"true"},"#"),n(" 通过 "),s("code",null,"@vuepress/plugin-register-components"),n(" 注册组件")],-1),m=s("p",null,[n("你可以通过 "),s("code",null,"@vuepress/plugin-register-components"),n(" 插件来自动注册组件。")],-1),C={href:"https://v2.vuepress.vuejs.org/zh/reference/plugin/register-components.html",target:"_blank",rel:"noopener noreferrer"},A=o(`<h3 id="通过-clientconfigfile-注册" tabindex="-1"><a class="header-anchor" href="#通过-clientconfigfile-注册" aria-hidden="true">#</a> 通过 ClientConfigFile 注册</h3><p>你可以通过创建 <code>.vuepress/client.ts</code> 手动注册组件。</p><div class="language-typescript" data-ext="ts"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .vuepress/client.ts</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineClientConfig</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@vuepress/client&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">MyComponent</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;./MyComponent.vue&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineClientConfig</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">enhance</span><span style="color:#ABB2BF;">: ({ </span><span style="color:#E06C75;font-style:italic;">app</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">router</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">siteData</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;MyComponent&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">MyComponent</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="在-markdown-中使用-vue-语法与组件" tabindex="-1"><a class="header-anchor" href="#在-markdown-中使用-vue-语法与组件" aria-hidden="true">#</a> 在 Markdown 中使用 Vue 语法与组件</h2>`,4),v=o(`<p>如果你需要在 Markdown 中导入 Vue 组件，请注意你不能使用相对路径进行导入，也不能书写多个 <code>&lt;script&gt;</code> 块。</p><div class="hint-container info"><p class="hint-container-title">Markdown 与 Vue SFC</p><p>每一个 Markdown 文件，首先都会编译为 HTML ，然后转换为一个 Vue 单文件组件 (SFC) 。换句话说，你可以像写 Vue SFC 一样来写 Markdown 文件:</p><p><code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code> 标签会直接被当作 Vue SFC 中的标签。换句话说，它们是从 <code>&lt;template&gt;</code> 标签中提升到了 SFC 的顶层。 所有 <code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code> 标签的以外的内容，会先被编译为 HTML ，然后被当作 Vue SFC 的 <code>&lt;template&gt;</code> 标签。</p><p>由于 Vue 单文件组件只能包含一个 <code>&lt;script&gt;</code> 标签，你应该避免在 VuePress Markdown 中使用多于一个 <code>&lt;script&gt;</code> 标签。</p><p>另外由于 Markdown 会被转换为缓存目录下的 Vue 单文件组件，任何相对路径的导入会在 Vue SFC 中失效。</p></div><p>为了正确导入自己的组件，你需要为它们创建别名，你可以通过 <code>alias</code> 选项实现这一点:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// .vuepress/config.ts</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">getDirname</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@vuepress/utils&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">__dirname</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getDirname</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">alias</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;@MyComponent&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;components/MyComponent.vue&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown" data-ext="md"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;MyComponent /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;script setup lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">import MyComponent from &quot;@MyComponent&quot;;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/script&gt;</span></span>
<span class="line"></span></code></pre></div><p>这固然复杂一些，但是如果你所使用的组件仅在这个页面使用，这样导入更具有优势:</p><ul><li>全局导入意味着组件代码需要在 VuePress 初始化，也就是访问首个页面时载入</li><li>在 Markdown 中导入会使得组件代码包含在页面代码中，这样它仅会在访问这个页面时被导入</li></ul>`,7);function h(g,f){const l=e("ExternalLinkIcon"),p=e("RouterLink");return c(),r("div",null,[y,i(" more "),u,F,m,s("p",null,[n("插件的使用方法详见 "),s("a",C,[n("官方文档"),a(l)]),n("。")]),A,s("p",null,[n("你可以直接在 Markdown 中使用 Vue 语法。关于具体的使用方式，详见 "),a(p,{to:"/zh/cookbook/vuepress/markdown.html#%E5%9C%A8-markdown-%E4%B8%AD%E4%BD%BF%E7%94%A8-vue"},{default:B(()=>[n("VuePress → Markdown")]),_:1})]),v])}const k=t(d,[["render",h],["__file","component.html.vue"]]);export{k as default};
